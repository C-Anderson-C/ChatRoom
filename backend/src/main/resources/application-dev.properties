# \u6570\u636E\u5E93\u9A71\u52A8\u7C7B
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Druid \u8FDE\u63A5\u6C60\u7C7B\u578B
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# \u6570\u636E\u5E93\u7528\u6237\u540D
spring.datasource.username=root

# \u5F00\u53D1\u73AF\u5883\u5BC6\u7801
spring.datasource.password=Anderson_123

# \u6570\u636E\u5E93URL\uFF08\u4FEE\u6539\u4E86\u65F6\u533A\u8BBE\u7F6E\u5E76\u6DFB\u52A0\u4E86\u989D\u5916\u53C2\u6570\uFF0C\u786E\u4FDD\u6B63\u786E\u5904\u7406\u4E2D\u6587\u548C\u7279\u6B8A\u5B57\u7B26\uFF09
spring.datasource.url=jdbc:mysql://localhost:3306/chatroom?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&useSSL=false

# MyBatis\u914D\u7F6E
# \u5F00\u542F\u9A7C\u5CF0\u547D\u540D\u81EA\u52A8\u6620\u5C04
mybatis.configuration.map-underscore-to-camel-case=true
# SQL\u65E5\u5FD7\u663E\u793A
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# mapper\u6587\u4EF6\u4F4D\u7F6E\u914D\u7F6E
mybatis.mapper-locations=classpath:mapper/*.xml
# \u5B9E\u4F53\u7C7B\u5305\u8DEF\u5F84
mybatis.type-aliases-package=top.javahai.chatroom.entity

# \u7AEF\u53E3\u53F7\u914D\u7F6E
server.port=8081

# FastDFS\u6587\u4EF6\u670D\u52A1\u5668\u7684\u4E3B\u673A\u540D
fastdfs.nginx.host=http://39.108.169.57/

# Druid\u8FDE\u63A5\u6C60\u914D\u7F6E
# Druid\u521D\u59CB\u8FDE\u63A5\u6570
spring.datasource.druid.initial-size=5
# Druid\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570
spring.datasource.druid.min-idle=5
# Druid\u6700\u5927\u8FDE\u63A5\u6570
spring.datasource.druid.max-active=20
# Druid\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF08ms\uFF09
spring.datasource.druid.max-wait=60000
# Druid\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u65F6\u95F4\u95F4\u9694\uFF08ms\uFF09
spring.datasource.druid.time-between-eviction-runs-millis=60000
# Druid\u7A7A\u95F2\u8FDE\u63A5\u6700\u5C0F\u751F\u5B58\u65F6\u95F4\uFF08ms\uFF09
spring.datasource.druid.min-evictable-idle-time-millis=300000
# Druid\u8FDE\u63A5\u9A8C\u8BC1SQL
spring.datasource.druid.validation-query=SELECT 1
# Druid\u7A7A\u95F2\u8FDE\u63A5\u68C0\u6D4B
spring.datasource.druid.test-while-idle=true
# \u501F\u7528\u8FDE\u63A5\u65F6\u4E0D\u6D4B\u8BD5
spring.datasource.druid.test-on-borrow=false
# \u5F52\u8FD8\u8FDE\u63A5\u65F6\u4E0D\u6D4B\u8BD5
spring.datasource.druid.test-on-return=false
# \u662F\u5426\u7F13\u5B58preparedStatement\uFF0C\u4E5F\u5C31\u662FPSCache
spring.datasource.druid.pool-prepared-statements=true
# \u8981\u542F\u7528PSCache\uFF0C\u5FC5\u987B\u914D\u7F6E\u5927\u4E8E0
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

# \u589E\u52A0\u8BF7\u6C42\u5934\u5927\u5C0F\u9650\u5236\uFF0864KB\uFF09
server.max-http-header-size=65536
# \u589E\u52A0\u8BF7\u6C42\u4F53\u5927\u5C0F\u9650\u5236
server.tomcat.max-http-form-post-size=10485760
server.tomcat.max-swallow-size=-1

# \u542F\u7528 CORS
spring.mvc.cors.allowed-origins=http://localhost:8083
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# \u65E5\u5FD7\u914D\u7F6E
logging.level.top.javahai.chatroom=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

# \u6DFB\u52A0SQL\u65E5\u5FD7
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# SQL\u6587\u4EF6\u521D\u59CB\u5316\u914D\u7F6E\uFF08\u53EF\u9009\uFF0C\u7528\u4E8E\u5728\u5E94\u7528\u542F\u52A8\u65F6\u6267\u884CSQL\uFF09
# spring.sql.init.schema-locations=classpath:schema.sql
# spring.sql.init.data-locations=classpath:data.sql
# spring.sql.init.mode=always

# \u5F00\u542FSpring Boot\u7684Actuator\u7AEF\u70B9\uFF0C\u4FBF\u4E8E\u76D1\u63A7\uFF08\u53EF\u9009\uFF09
# management.endpoints.web.exposure.include=*
# management.endpoint.health.show-details=always

# \u6587\u4EF6\u4E0A\u4F20\u914D\u7F6E
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

# \u4F1A\u8BDD\u8D85\u65F6\u8BBE\u7F6E\uFF0830\u5206\u949F\uFF09
server.servlet.session.timeout=30m

# \u914D\u7F6E\u8FDE\u63A5\u6C60\u8D85\u65F6\u65F6\u95F4\u548C\u4FDD\u6D3B\u8BBE\u7F6E
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000